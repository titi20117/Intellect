using System;
using System.Collections.Generic;
using System.Text;

namespace Intellect.Data
{
    public class TablesData
    {
		public List<string> Ends { get { return CreateList(myEnds); } }
		public List<string> WordBasis { get { return CreateList(basis); } }

		public List<string> GrammatiInfo { get { return CreateList(gramInfo); } }


		private string[] myEnds =
		{
			"ами", "ат", "мя", "ям", "его", "ах", "ов", "ят", "емп", "ая", "ев", "ях",
			"ему", "ев", "ой", "яя", "емя", "ее", "ом", "а", "ете", "ей", "ою", "е",
			"ешь", "ем", "ум", "и", "ими", "ет", "ут", "й", "ите", "ох", "ух", "о",
			"ишь", "ею", "ую", "у", "ого", "ие", "ые", "ы", "ому", "ий", "ый", "ь",
			"умя", "им", "ым", "ю", "ыми", "ит", "ых", "я", "ями", "их", "ют", "ть",
			"ам", "ми", "юю",  "ется", "ов", "+"
		};

		private string[] basis =
		{
			"билет-+,ы,а,ов-1", "ден-ь,и-1", "час-ов-1","зоопарк-а,+-1", "режим-+-1", "ребенок-+,а-1","пенсионер-+,а,ов-1",
			"цен-а-1", "стоимост-+,ь-1", "касс-а,ы,е-1","продаж-а,е-1", "работ-а,ы-1", "наличи-е,и-1","дет-и,ей-1",
			"будн-ие,ий-2", "рабоч-ие,ий-2","выходн-ой,ые-2", "взросл-ый-ого,ых-2", "маленьк-ий,их,ого-2", "детск-ий,ого-2",
			"социальн-ый,ого-2", "пенсионн-ый,ого-2", "льготн-ый,ого-2", "сто-ь,ат,ит,-3","ест-ь-3", "работа-ть,ет-3",
			"открыва-ется,ть,ют-3", "закрыва-ется,ть,ют-3","как-+,ов,ой,ие-4","сколько-+-4", "в-+-4", "во-+-4",
			"для-+-4", "ли-+-4"
		};

		private string[,] gramInfo =
		{
			{ "1", "11-ед.число:именительный падеж" }, {"2", "11,14-ед.число:именительный падеж/винительный падеж" }, 
			{ "3", "11,14,16-ед.число:им./вин.падеж, предл.падеж" }, {"4", "11,14,22-ед.число:им./вин.падеж; мн.число:им.падеж" }, 
			{ "5", "11,22,24-ед.число:им.падеж; мн.число:род./вин.падеж" }, {"6", "12-ед.число:род.падеж" }, 
			{ "7", "12,13,15,16-ед.число:род./дат./вин./твор.падеж" }, {"8", "12,13,16-ед.число:род./дат./пред.падеж" },
			{ "9", "12,13,16,21-ед.число:род./дат./пред.падеж; мн.число:им.число:им.падеж" },
			{"10", "12,13,16,21,24-ед.число:род./дат./пред.падеж; мн.число:им.число:им./вин.падеж" }, 
			{ "11", "12,14-ед.число:род./вин.падеж" }, {"12", "12,14,21-ед.число:род./вин.падеж; мн.число:им.падеж" },
			{ "13", "12,21-ед.число:род.падеж; мн.число:им.падеж" }, {"14", "12,21,24-ед.число:род.падеж; мн.число:им./вин.падеж" },
			{ "15", "13-ед.число:дат.падеж" }, {"16", "13,16-ед.число:дат./предл.падеж" },
			{ "17", "14-ед.число:вин.падеж" }, {"18", "15-ед.число:твор.падеж" },
			{ "19", "15,22-ед.число:твор.падеж; мн.число:род.падеж" },
			{"20", "15,22,24-ед.число:твор.падеж; мн.число:род./вин.падеж" },
			{ "21", "15,23-ед.число:твор.падеж; мн.число:дат.падеж" }, {"22", "16-ед.число:пред.падеж" }, 
			{ "23", "16,21-ед.число:пред.падеж; мн.число:им.падеж" }, {"24", "16,21,24-ед.число:пред.падеж; мн.число:им./вин.падеж" },
			{ "25", "21-мн.число:им.падеж" }, {"26", "21,24-мн.число:им./вин.падеж" }, 
			{ "27", "22-мн.число:род.падеж" }, {"28", "22,24-мн.число:род./вин.падеж" },
			{ "29", "22,24,26-мн.число:род./вин./пред.падеж" }, {"30", "23-мн.число:дат.падеж" },
			{ "31", "25-мн.число:твор.падеж" }, {"32", "26-мн.число:пред.падеж" },
			
		};

		private List<string> CreateList(string[] elsWords)
		{
			List<string> result = new List<string>();
			foreach (string el in elsWords)
				result.Add(el);
			return result;
		}

		private List<string> CreateList(string[,] gramInfo)
		{
			List<string> result = new List<string>();
			for (int i = 0; i < gramInfo.Length; i++)
			{
				result.Add(gramInfo[i,1]);
			}
			return result;
		}
	}
}
